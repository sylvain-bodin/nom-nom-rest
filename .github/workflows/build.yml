name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Node installation
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Clean install dependencies and build
        run: |
          npm ci
          npm run build
      - name: Tests
        run: npm run test
      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-package
          path: dist/src
  package:
    name: Package the application
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Node installation
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Clean install prod dependencies
          run: npm install --only=prod
      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: modules-package
          path: node-modules
  deploy:
    name: Deploy
    needs: package
    runs-on: ubuntu-latest
    steps:
      - name: Get the artifact
        uses: actions/download-artifact@v2
        with:
          name: dist-package
          path: dist/src
      - name: Get the artifact
        uses: actions/download-artifact@v2
        with:
          name: modules-package
          path: node-modules
      - name: Deploy on ssh server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: ${{ secrets.REMOTE_PATH }}
